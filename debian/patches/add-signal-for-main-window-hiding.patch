From: https://gitlab.gnome.org/GNOME/calls/-/merge_requests/717
From: Chris Talbot <chris@talbothome.com>
Date: Tue, 6 Feb 2024 20:29:40 -0700
Subject: [PATCH 1/3] application: add signal for main window hiding

---
 src/calls-application.c  | 29 ++++++++++++++++++++++++++++-
 src/calls-contacts-box.c | 11 +++++++++++
 src/calls-new-call-box.c | 14 ++++++++++++++
 3 files changed, 53 insertions(+), 1 deletion(-)

--- a/src/calls-application.c
+++ b/src/calls-application.c
@@ -80,6 +80,12 @@
 
 G_DEFINE_TYPE (CallsApplication, calls_application, ADW_TYPE_APPLICATION);
 
+enum {
+  SIGNAL_MAIN_WINDOW_CLOSED,
+  N_SIGNALS
+};
+
+static guint signals[N_SIGNALS];
 
 static void start_proper (CallsApplication *self);
 
@@ -623,6 +629,16 @@
     g_warning ("Database did not get opened");
 }
 
+static gboolean
+on_main_window_hidden (GtkWidget *widget,
+                       gpointer data)
+{
+  CallsApplication *self = CALLS_APPLICATION (g_application_get_default ());
+
+  g_signal_emit_by_name (self, "main-window-closed", 0);
+
+  return FALSE;
+}
 
 static void
 start_proper (CallsApplication *self)
@@ -670,8 +686,12 @@
                            G_CALLBACK (notify_window_visible_cb),
                            self,
                            G_CONNECT_AFTER);
-}
 
+  g_signal_connect (G_OBJECT (self->main_window),
+                    "hide",
+                    G_CALLBACK (on_main_window_hidden),
+                    NULL);
+}
 
 static void
 activate (GApplication *application)
@@ -773,6 +793,13 @@
   GApplicationClass *application_class = G_APPLICATION_CLASS (klass);
   GObjectClass *object_class = G_OBJECT_CLASS (klass);
 
+  signals [SIGNAL_MAIN_WINDOW_CLOSED] =
+    g_signal_new ("main-window-closed",
+                  G_TYPE_FROM_CLASS (klass),
+                  G_SIGNAL_RUN_LAST,
+                  0, NULL, NULL, NULL,
+                  G_TYPE_NONE, 0);
+
   object_class->finalize = finalize;
 
   application_class->handle_local_options = calls_application_handle_local_options;
--- a/src/calls-contacts-box.c
+++ b/src/calls-contacts-box.c
@@ -159,6 +159,12 @@
   g_clear_pointer (&child, gtk_widget_unparent);
 }
 
+static void
+on_main_window_closed (CallsContactsBox *self)
+{
+  gtk_editable_delete_text (GTK_EDITABLE (self->search_entry), 0, -1);
+}
+
 
 static void
 calls_contacts_box_class_init (CallsContactsBoxClass *klass)
@@ -234,6 +240,11 @@
                             G_CALLBACK (search_changed_cb),
                             self);
 
+  g_signal_connect_swapped (g_application_get_default (),
+                            "main-window-closed",
+                            G_CALLBACK (on_main_window_closed),
+                            self);
+
   if (!gee_collection_get_is_empty (individuals))
     calls_contacts_provider_consume_iter_on_idle (gee_iterable_iterator (GEE_ITERABLE (individuals)),
                                                   (IdleCallback) contacts_provider_added,
--- a/src/calls-new-call-box.c
+++ b/src/calls-new-call-box.c
@@ -312,6 +312,15 @@
 }
 
 static void
+on_main_window_closed (CallsNewCallBox *self)
+{
+  g_object_set (self->dialpad,
+                "number",
+                "",
+                NULL);
+}
+
+static void
 calls_new_call_box_init (CallsNewCallBox *self)
 {
   GListModel *origins;
@@ -330,6 +339,11 @@
                            G_CALLBACK (origin_count_changed_cb),
                            self,
                            G_CONNECT_SWAPPED);
+  g_signal_connect_swapped (g_application_get_default (),
+                            "main-window-closed",
+                            G_CALLBACK (on_main_window_closed),
+                            self);
+
   origin_count_changed_cb (self);
 }
 
